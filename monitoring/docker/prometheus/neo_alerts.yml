groups:
- name: neo-availability
  rules:
  - alert: NeoNodeDown
    expr: up{job="neo-node"} == 0
    for: 2m
    labels:
      severity: critical
    annotations:
      summary: "Neo node is down"
      description: "The Neo node {{ $labels.instance }} has been down for more than 2 minutes."
      runbook_url: "https://wiki.example.com/neo/alerts/node-down"

  - alert: NeoBlockchainSyncLagging
    # Assuming 1 is synced, < 1 means syncing
    expr: neo_blockchain_sync_status{job="neo-node"} < 0.99 
    for: 30m
    labels:
      severity: warning
    annotations:
      summary: "Neo blockchain sync lagging"
      description: "Neo node {{ $labels.instance }} is not fully synced ({{ $value | printf \"%.2f\" }}) for more than 30 minutes."
      runbook_url: "https://wiki.example.com/neo/alerts/sync-lagging"
      
  - alert: NeoBlockchainTipLagging
    expr: neo_blockchain_chain_tip_lag{job="neo-node"} > 3
    for: 15m
    labels:
      severity: warning
    annotations:
      summary: "Neo blockchain tip lagging"
      description: "Neo node {{ $labels.instance }} is {{ $value }} blocks behind the network tip for more than 15 minutes."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neoblockchaintiplagging"

- name: neo-performance
  rules:
  - alert: NeoHighCPUUsage
    # Calculates the 5m rate of CPU usage as a percentage
    # Note: neo_node_cpu_seconds_total is a counter of total seconds, rate gives per-second usage.
    # Multiply by 100 to get percentage assuming 1 core fully utilized = 1.0 per second.
    # Adjust if running on multi-core and expecting >100% usage.
    expr: rate(neo_node_cpu_seconds_total{job="neo-node"}[5m]) * 100 > 80
    for: 15m
    labels:
      severity: warning
    annotations:
      summary: "Neo node high CPU usage"
      description: "Neo node {{ $labels.instance }} has average CPU usage above 80% for more than 15 minutes ({{ $value | printf \"%.2f\" }}%)."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neohighcpuusage"
      
  - alert: NeoHighMemoryUsage
    # Using working set. Threshold might need adjustment based on typical node usage.
    expr: neo_node_memory_working_set_bytes{job="neo-node"} > 4*1024*1024*1024 # Example: Alert above 4GB
    for: 15m
    labels:
      severity: warning
    annotations:
      summary: "Neo node high memory usage"
      description: "Neo node {{ $labels.instance }} has memory working set usage above 4GB for more than 15 minutes ({{ $value }} bytes)."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neohighmemoryusage"
      
  # Disk space alerts typically rely on node_exporter
  # - alert: NeoDiskSpaceRunningOut
  #   expr: node_filesystem_avail_bytes{job="node_exporter", mountpoint="/"} / node_filesystem_size_bytes{job="node_exporter", mountpoint="/"} * 100 < 15
  #   for: 30m
  #   labels:
  #     severity: warning
  #   annotations:
  #     summary: "Neo node disk space running out"
  #     description: "Disk space on {{ $labels.instance }} mountpoint {{ $labels.mountpoint }} is below 15%."
  #     runbook_url: "https://wiki.example.com/neo/alerts/disk-space"
      
  - alert: NeoSlowAPIResponses
    # Use the correct metric name: neo_node_api_request_duration_seconds
    expr: histogram_quantile(0.95, sum(rate(neo_node_api_request_duration_seconds_bucket{job="neo-node"}[5m])) by (le, method)) > 2
    for: 10m
    labels:
      severity: warning
    annotations:
      summary: "Neo node slow API responses"
      description: "Neo node {{ $labels.instance }} has 95th percentile API response time above 2 seconds for method {{ $labels.method }}."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neoslowapiresponses"

- name: neo-network
  rules:
  - alert: NeoLowPeerCount
    # Use the correct metric name: neo_network_peers_count
    expr: neo_network_peers_count{job="neo-node"} < 5
    for: 10m
    labels:
      severity: warning
    annotations:
      summary: "Neo node low peer count"
      description: "Neo node {{ $labels.instance }} has less than 5 peers connected for more than 10 minutes ({{ $value }} peers)."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neolowpeercount"
      
  # Peer connection errors metric not currently implemented in PrometheusService.cs
  # - alert: NeoPeerConnectionErrors
  #   expr: rate(neo_network_peer_connection_errors_total{job="neo-node"}[5m]) > 2
  #   for: 15m
  #   labels:
  #     severity: warning
  #   annotations:
  #     summary: "Neo node frequent peer connection errors"
  #     description: "Neo node {{ $labels.instance }} has more than 2 peer connection errors per minute for 15 minutes."
  #     runbook_url: "https://wiki.example.com/neo/alerts/peer-errors"

  - alert: NeoInvalidP2PMessageRate
    # New alert based on neo_invalid_p2p_message_count_total
    expr: rate(neo_invalid_p2p_message_count_total{job="neo-node"}[5m]) > 1 # Alert if >1 invalid message per second on average over 5m
    for: 10m
    labels:
      severity: warning
    annotations:
      summary: "Neo node receiving invalid P2P messages at high rate"
      description: "Neo node {{ $labels.instance }} is receiving invalid P2P messages at a rate higher than 1 per second (Reason: {{ $labels.reason }}, Rate: {{ $value | printf \"%.2f\" }}/s)."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neoinvalidp2pmessagerate"

- name: neo-transactions
  rules:
  - alert: NeoMempoolNearCapacity
    # Use the correct metric name: neo_mempool_size_transactions
    expr: neo_mempool_size_transactions{job="neo-node"} > 10000
    for: 30m
    labels:
      severity: warning
    annotations:
      summary: "Neo mempool approaching capacity (tx count)"
      description: "Neo node {{ $labels.instance }} has over 10,000 transactions in the mempool for more than 30 minutes ({{ $value }} txs)."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neomempoolnearcapacity"
      
  - alert: NeoHighTransactionRejectionRate
    # Use the correct metric name: neo_mempool_transactions_rejected_total
    expr: sum(rate(neo_mempool_transactions_rejected_total{job="neo-node"}[5m])) by (instance) > 20 # Rate across all rejection reasons
    for: 15m
    labels:
      severity: warning
    annotations:
      summary: "Neo node high transaction rejection rate"
      description: "Neo node {{ $labels.instance }} is rejecting more than 20 transactions per minute in total for 15 minutes."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neohightransactionrejectionrate"

- name: neo-consensus
  rules:
  - alert: NeoConsensusStuck
    # Use the correct metric name: neo_consensus_current_height
    expr: changes(neo_consensus_current_height{job="neo-node"}[5m]) == 0 # Check if height hasn't changed in 5 mins
    for: 5m # Alert if height is stuck for 5 minutes total
    labels:
      severity: critical
    annotations:
      summary: "Neo consensus may be stuck"
      description: "Consensus height on {{ $labels.instance }} has not changed for 5 minutes."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neoconsensusstuck"

  - alert: NeoHighConsensusView
    # Use the correct metric name: neo_consensus_current_view
    expr: neo_consensus_current_view{job="neo-node"} > 3
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: "Neo consensus view is high"
      description: "Consensus view on {{ $labels.instance }} is {{ $value }}, indicating potential issues."
      runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neohighconsensusview"

  # PoS specific alerts (Missed blocks, slashing) are not directly applicable or implemented yet
  # PoW specific alerts (Hashrate drop) are not applicable

- name: neo-validator
  # New group for validator specific alerts
  rules:
    - alert: NeoValidatorInactive
      # Alert if this node should be a validator but the active gauge is 0
      expr: neo_validator_active{job="neo-node"} == 0
      for: 5m # Allow some grace period for initialization/view changes
      # Note: This alert assumes the node *should* be active.
      # Add external labels or configuration if only specific nodes are validators.
      labels:
        severity: critical
      annotations:
        summary: "Neo node is inactive as a validator"
        description: "Neo node {{ $labels.instance }} is configured as a validator but is currently inactive."
        runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neovalidatorinactive"

    - alert: NeoValidatorMissedBlocks
      # Alert if the node missed proposing a block when it was primary
      expr: increase(neo_validator_missed_blocks_total{job="neo-node"}[1h]) > 0
      labels:
        severity: warning
      annotations:
        summary: "Neo validator may have missed block proposals"
        description: "Neo node {{ $labels.instance }} has potentially missed {{ $value }} block proposals in the last hour."
        runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neovalidatormissedblocks"

- name: neo-security
  rules:
    # Security metrics like auth failures, DoS protection, etc., are not currently implemented in PrometheusService.cs

    - alert: NeoFailedRpcAuthentication
      # Alert on recent failed RPC login attempts
      expr: increase(neo_failed_authentication_attempts_total{job="neo-node", service="RPC"}[5m]) > 5
      labels:
        severity: warning
      annotations:
        summary: "Multiple failed RPC authentication attempts detected"
        description: "Detected {{ $value }} failed RPC login attempts to {{ $labels.instance }} in the last 5 minutes."
        runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neofailedrpcauthentication"

    - alert: NeoUnexpectedShutdownDetected
      # Alert if an unexpected shutdown was detected (e.g., on startup via recovery logs)
      expr: increase(neo_unexpected_shutdowns_total{job="neo-node"}[1m]) > 0
      labels:
        severity: critical
      annotations:
        summary: "Neo node potentially shut down unexpectedly"
        description: "An unexpected shutdown was detected on {{ $labels.instance }}. Reason: {{ $labels.reason }}."
        runbook_url: "https://docs.neo.org/docs/en-us/node/monitor/alerts.html#neounexpectedshutdowndetected" 