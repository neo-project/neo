<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neo.Json</name>
    </assembly>
    <members>
        <member name="T:Neo.Json.JArray">
            <summary>
            Represents a JSON array.
            </summary>
        </member>
        <member name="M:Neo.Json.JArray.#ctor(Neo.Json.JToken[])">
            <summary>
            Initializes a new instance of the <see cref="T:Neo.Json.JArray"/> class.
            </summary>
            <param name="items">The initial items in the array.</param>
        </member>
        <member name="M:Neo.Json.JArray.#ctor(System.Collections.Generic.IEnumerable{Neo.Json.JToken})">
            <summary>
            Initializes a new instance of the <see cref="T:Neo.Json.JArray"/> class.
            </summary>
            <param name="items">The initial items in the array.</param>
        </member>
        <member name="T:Neo.Json.JBoolean">
            <summary>
            Represents a JSON boolean value.
            </summary>
        </member>
        <member name="P:Neo.Json.JBoolean.Value">
            <summary>
            Gets the value of the JSON token.
            </summary>
        </member>
        <member name="M:Neo.Json.JBoolean.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Neo.Json.JBoolean"/> class with the specified value.
            </summary>
            <param name="value">The value of the JSON token.</param>
        </member>
        <member name="M:Neo.Json.JBoolean.AsNumber">
            <summary>
            Converts the current JSON token to a floating point number.
            </summary>
            <returns>The number 1 if value is <see langword="true"/>; otherwise, 0.</returns>
        </member>
        <member name="T:Neo.Json.JNumber">
            <summary>
            Represents a JSON number.
            </summary>
        </member>
        <member name="F:Neo.Json.JNumber.MAX_SAFE_INTEGER">
            <summary>
            Represents the largest safe integer in JSON.
            </summary>
        </member>
        <member name="F:Neo.Json.JNumber.MIN_SAFE_INTEGER">
            <summary>
            Represents the smallest safe integer in JSON.
            </summary>
        </member>
        <member name="P:Neo.Json.JNumber.Value">
            <summary>
            Gets the value of the JSON token.
            </summary>
        </member>
        <member name="M:Neo.Json.JNumber.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Neo.Json.JNumber"/> class with the specified value.
            </summary>
            <param name="value">The value of the JSON token.</param>
        </member>
        <member name="M:Neo.Json.JNumber.AsBoolean">
            <summary>
            Converts the current JSON token to a boolean value.
            </summary>
            <returns><see langword="true"/> if value is not zero; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:Neo.Json.JObject">
            <summary>
            Represents a JSON object.
            </summary>
        </member>
        <member name="P:Neo.Json.JObject.Properties">
            <summary>
            Gets or sets the properties of the JSON object.
            </summary>
        </member>
        <member name="P:Neo.Json.JObject.Item(System.String)">
            <summary>
            Gets or sets the properties of the JSON object.
            </summary>
            <param name="name">The name of the property to get or set.</param>
            <returns>The property with the specified name.</returns>
        </member>
        <member name="M:Neo.Json.JObject.ContainsProperty(System.String)">
            <summary>
            Determines whether the JSON object contains a property with the specified name.
            </summary>
            <param name="key">The property name to locate in the JSON object.</param>
            <returns><see langword="true"/> if the JSON object contains a property with the name; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Neo.Json.JObject.Clone">
            <summary>
            Creates a copy of the current JSON object.
            </summary>
            <returns>A copy of the current JSON object.</returns>
        </member>
        <member name="T:Neo.Json.JString">
            <summary>
            Represents a JSON string.
            </summary>
        </member>
        <member name="P:Neo.Json.JString.Value">
            <summary>
            Gets the value of the JSON token.
            </summary>
        </member>
        <member name="M:Neo.Json.JString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Neo.Json.JString"/> class with the specified value.
            </summary>
            <param name="value">The value of the JSON token.</param>
        </member>
        <member name="M:Neo.Json.JString.AsBoolean">
            <summary>
            Converts the current JSON token to a boolean value.
            </summary>
            <returns><see langword="true"/> if value is not empty; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:Neo.Json.JToken">
            <summary>
            Represents an abstract JSON token.
            </summary>
        </member>
        <member name="F:Neo.Json.JToken.Null">
            <summary>
            Represents a <see langword="null"/> token.
            </summary>
        </member>
        <member name="P:Neo.Json.JToken.Item(System.Int32)">
            <summary>
            Gets or sets the child token at the specified index.
            </summary>
            <param name="index">The zero-based index of the child token to get or set.</param>
            <returns>The child token at the specified index.</returns>
        </member>
        <member name="P:Neo.Json.JToken.Item(System.String)">
            <summary>
            Gets or sets the properties of the JSON object.
            </summary>
            <param name="key">The key of the property to get or set.</param>
            <returns>The property with the specified name.</returns>
        </member>
        <member name="M:Neo.Json.JToken.AsBoolean">
            <summary>
            Converts the current JSON token to a boolean value.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Neo.Json.JToken.AsEnum``1(``0,System.Boolean)">
            <summary>
            Converts the current JSON token to an <see cref="T:System.Enum"/>.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Enum"/>.</typeparam>
            <param name="defaultValue">If the current JSON token cannot be converted to type <typeparamref name="T"/>, then the default value is returned.</param>
            <param name="ignoreCase">Indicates whether case should be ignored during conversion.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Neo.Json.JToken.AsNumber">
            <summary>
            Converts the current JSON token to a floating point number.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Neo.Json.JToken.AsString">
            <summary>
            Converts the current JSON token to a <see cref="T:System.String"/>.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Neo.Json.JToken.GetBoolean">
            <summary>
            Converts the current JSON token to a boolean value.
            </summary>
            <returns>The converted value.</returns>
            <exception cref="T:System.InvalidCastException">The JSON token is not a <see cref="T:Neo.Json.JBoolean"/>.</exception>
        </member>
        <member name="M:Neo.Json.JToken.GetInt32">
            <summary>
            Converts the current JSON token to a 32-bit signed integer.
            </summary>
            <returns>The converted value.</returns>
            <exception cref="T:System.InvalidCastException">The JSON token is not a <see cref="T:Neo.Json.JNumber"/>.</exception>
            <exception cref="T:System.InvalidCastException">The JSON token cannot be converted to an integer.</exception>
            <exception cref="T:System.OverflowException">The JSON token cannot be converted to a 32-bit signed integer.</exception>
        </member>
        <member name="M:Neo.Json.JToken.GetNumber">
            <summary>
            Converts the current JSON token to a floating point number.
            </summary>
            <returns>The converted value.</returns>
            <exception cref="T:System.InvalidCastException">The JSON token is not a <see cref="T:Neo.Json.JNumber"/>.</exception>
        </member>
        <member name="M:Neo.Json.JToken.GetString">
            <summary>
            Converts the current JSON token to a <see cref="T:System.String"/>.
            </summary>
            <returns>The converted value.</returns>
            <exception cref="T:System.InvalidCastException">The JSON token is not a <see cref="T:Neo.Json.JString"/>.</exception>
        </member>
        <member name="M:Neo.Json.JToken.Parse(System.ReadOnlySpan{System.Byte},System.Int32)">
            <summary>
            Parses a JSON token from a byte array.
            </summary>
            <param name="value">The byte array that contains the JSON token.</param>
            <param name="max_nest">The maximum nesting depth when parsing the JSON token.</param>
            <returns>The parsed JSON token.</returns>
        </member>
        <member name="M:Neo.Json.JToken.Parse(System.String,System.Int32)">
            <summary>
            Parses a JSON token from a <see cref="T:System.String"/>.
            </summary>
            <param name="value">The <see cref="T:System.String"/> that contains the JSON token.</param>
            <param name="max_nest">The maximum nesting depth when parsing the JSON token.</param>
            <returns>The parsed JSON token.</returns>
        </member>
        <member name="M:Neo.Json.JToken.ToByteArray(System.Boolean)">
            <summary>
            Encode the current JSON token into a byte array.
            </summary>
            <param name="indented">Indicates whether indentation is required.</param>
            <returns>The encoded JSON token.</returns>
        </member>
        <member name="M:Neo.Json.JToken.ToString">
            <summary>
            Encode the current JSON token into a <see cref="T:System.String"/>.
            </summary>
            <returns>The encoded JSON token.</returns>
        </member>
        <member name="M:Neo.Json.JToken.ToString(System.Boolean)">
            <summary>
            Encode the current JSON token into a <see cref="T:System.String"/>.
            </summary>
            <param name="indented">Indicates whether indentation is required.</param>
            <returns>The encoded JSON token.</returns>
        </member>
    </members>
</doc>
