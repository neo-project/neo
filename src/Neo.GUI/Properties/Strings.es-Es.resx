<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Acerca de</value>
  </data>
  <data name="AboutMessage" xml:space="preserve">
    <value>NEO</value>
  </data>
  <data name="AboutVersion" xml:space="preserve">
    <value>Versión: </value>
  </data>
  <data name="AddContractFailedMessage" xml:space="preserve">
    <value>Fallo al añadir el contrato inteligente. Falta la correspondiente clave privada en el monedero.</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Dirección</value>
  </data>
  <data name="ChangePasswordSuccessful" xml:space="preserve">
    <value>Contraseña cambiada con éxito.</value>
  </data>
  <data name="DeleteAddressConfirmationCaption" xml:space="preserve">
    <value>Confirmación</value>
  </data>
  <data name="DeleteAddressConfirmationMessage" xml:space="preserve">
    <value>Una vez eliminados, los activos de estas direcciones se perderán permanentemente. ¿Deseas continuar?</value>
  </data>
  <data name="DeleteAssetConfirmationMessage" xml:space="preserve">
    <value>Los activos no se pueden recuperar una vez eliminados. ¿Deseas eliminarlos?</value>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Confirmación</value>
  </data>
  <data name="EnterRemarkMessage" xml:space="preserve">
    <value>Notas de la transacción que se grabará en la blockchain.</value>
  </data>
  <data name="EnterRemarkTitle" xml:space="preserve">
    <value>Notas de la transacción</value>
  </data>
  <data name="ExecutionFailed" xml:space="preserve">
    <value>La ejecución terminó con un estado de error.</value>
  </data>
  <data name="ExpiredCertificate" xml:space="preserve">
    <value>Caducado</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Falló</value>
  </data>
  <data name="ImportWatchOnlyAddress" xml:space="preserve">
    <value>Importar dirección sólo lectura</value>
  </data>
  <data name="IncompletedSignatureMessage" xml:space="preserve">
    <value>Transacción iniciada aunque la firma está incompleta.</value>
  </data>
  <data name="IncompletedSignatureTitle" xml:space="preserve">
    <value>Firma incompleta</value>
  </data>
  <data name="InstallCertificateCancel" xml:space="preserve">
    <value>Instalación del certificado cancelada.</value>
  </data>
  <data name="InstallCertificateCaption" xml:space="preserve">
    <value>Instalar certificado</value>
  </data>
  <data name="InstallCertificateText" xml:space="preserve">
    <value>NEO debe instalar el certificado raíz de Onchain para validar activos en la blockchain. ¿Instalar ahora?</value>
  </data>
  <data name="InsufficientFunds" xml:space="preserve">
    <value>Fondos insuficientes, la transacción no se puede iniciar.</value>
  </data>
  <data name="InvalidCertificate" xml:space="preserve">
    <value>Inválido</value>
  </data>
  <data name="MigrateWalletCaption" xml:space="preserve">
    <value>Migrar monedero</value>
  </data>
  <data name="MigrateWalletMessage" xml:space="preserve">
    <value>Abriendo ficheros de monederos antiguos, actualizar al nuevo formato?
Aviso: los ficheros actualizados no podran ser abiertos por clientes de versiones antiguas.</value>
  </data>
  <data name="PasswordIncorrect" xml:space="preserve">
    <value>Contraseña incorrecta</value>
  </data>
  <data name="RelaySuccessText" xml:space="preserve">
    <value>Datos emitidos con éxito. El hash se muestra como sigue:</value>
  </data>
  <data name="RelaySuccessTitle" xml:space="preserve">
    <value>Emisión realizada con éxito</value>
  </data>
  <data name="RelayTitle" xml:space="preserve">
    <value>Raw:</value>
  </data>
  <data name="SendTxSucceedMessage" xml:space="preserve">
    <value>Transacción enviada, TXID:</value>
  </data>
  <data name="SendTxSucceedTitle" xml:space="preserve">
    <value>Transacción realizada con éxito</value>
  </data>
  <data name="SigningFailedKeyNotFoundMessage" xml:space="preserve">
    <value>Falta la clave privada para firmar los datos.</value>
  </data>
  <data name="SigningFailedNoDataMessage" xml:space="preserve">
    <value>Debes introducir el objeto JSON de los datos pendientes de firmar.</value>
  </data>
  <data name="SystemIssuer" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="TradeFailedFakeDataMessage" xml:space="preserve">
    <value>¡Falló la validación! El contratante falsificó el contenido de la transacción.</value>
  </data>
  <data name="TradeFailedInvalidDataMessage" xml:space="preserve">
    <value>¡Falló la validación! El contratante generó una transacción con contenido ilegal.</value>
  </data>
  <data name="TradeFailedNoSyncMessage" xml:space="preserve">
    <value>¡Falló la validación! Transacción no válida o blockchain sin sincronizar. Inténtalo de nuevo después de sincronizar.</value>
  </data>
  <data name="TradeNeedSignatureCaption" xml:space="preserve">
    <value>Firma necesaria.</value>
  </data>
  <data name="TradeNeedSignatureMessage" xml:space="preserve">
    <value>Transacción generada. Por favor, envia la siguiente información al contratante para su firma:</value>
  </data>
  <data name="TradeRequestCreatedCaption" xml:space="preserve">
    <value>Solicitud de transacción.</value>
  </data>
  <data name="TradeRequestCreatedMessage" xml:space="preserve">
    <value>Solicitud de transacción generada. Por favor, enviala al contratante o incorporala a la solicitud del contratante.</value>
  </data>
  <data name="TradeSuccessCaption" xml:space="preserve">
    <value>Transacción realizada con éxito.</value>
  </data>
  <data name="TradeSuccessMessage" xml:space="preserve">
    <value>Transacción enviada, este es el TXID:</value>
  </data>
  <data name="Unconfirmed" xml:space="preserve">
    <value>Sin confirmar.</value>
  </data>
  <data name="UnknownIssuer" xml:space="preserve">
    <value>Emisor desconocido.</value>
  </data>
  <data name="UnsynchronizedBlock" xml:space="preserve">
    <value>Blockchain sin sincronizar, la transacción no puede ser enviada.</value>
  </data>
</root>